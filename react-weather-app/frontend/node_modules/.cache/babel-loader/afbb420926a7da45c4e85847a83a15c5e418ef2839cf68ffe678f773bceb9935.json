{"ast":null,"code":"// import React from \"react\";\n// import {\n//   Accordion,\n//   AccordionItem,\n//   AccordionItemHeading,\n//   AccordionItemButton,\n//   AccordionItemPanel,\n// } from \"react-accessible-accordion\";\n// import \"./forecast.css\";\n\n// const WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n// const Forecast = ({ data }) => {\n//   const dayInAWeek = new Date().getDay();\n//   const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n\n//   return (\n//     <>\n//       <label className=\"title\">Daily</label>\n//       <Accordion allowZeroExpanded>\n//         {data.list.splice(0, 7).map((item, idx) => (\n//           <AccordionItem key={idx}>\n//             <AccordionItemHeading>\n//               <AccordionItemButton>\n//                 <div className=\"daily-item\">\n//                   <img src={`icons/${item.weather[0].icon}.png`} className=\"icon-small\" alt=\"weather\" />\n//                   <label className=\"day\">{forecastDays[idx]}</label>\n//                   <label className=\"description\">{item.weather[0].description}</label>\n//                   <label className=\"min-max\">{Math.round(item.main.temp_max)}°C /{Math.round(item.main.temp_min)}°C</label>\n//                 </div>\n//               </AccordionItemButton>\n//             </AccordionItemHeading>\n//             <AccordionItemPanel>\n//               <div className=\"daily-details-grid\">\n//                 <div className=\"daily-details-grid-item\">\n//                   <label>Pressure:</label>\n//                   <label>{item.main.pressure}</label>\n//                 </div>\n//                 <div className=\"daily-details-grid-item\">\n//                   <label>Humidity:</label>\n//                   <label>{item.main.humidity}</label>\n//                 </div>\n//                 <div className=\"daily-details-grid-item\">\n//                   <label>Clouds:</label>\n//                   <label>{item.clouds.all}%</label>\n//                 </div>\n//                 <div className=\"daily-details-grid-item\">\n//                   <label>Wind speed:</label>\n//                   <label>{item.wind.speed} m/s</label>\n//                 </div>\n//                 <div className=\"daily-details-grid-item\">\n//                   <label>Sea level:</label>\n//                   <label>{item.main.sea_level}m</label>\n//                 </div>\n//                 <div className=\"daily-details-grid-item\">\n//                   <label>Feels like:</label>\n//                   <label>{item.main.feels_like}°C</label>\n//                 </div>\n//               </div>\n//             </AccordionItemPanel>\n//           </AccordionItem>\n//         ))}\n//       </Accordion>\n//     </>\n//   );\n// };\n\n// export default Forecast;","map":{"version":3,"names":[],"sources":["C:/Users/bunya/Desktop/STUDIE/JAAR 1/PERIODE 4/werkplaats-4---inhaalopdracht-Bunyamin-1058754/react-weather-app/src/components/search/forecast/forecast.js"],"sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Accordion,\r\n//   AccordionItem,\r\n//   AccordionItemHeading,\r\n//   AccordionItemButton,\r\n//   AccordionItemPanel,\r\n// } from \"react-accessible-accordion\";\r\n// import \"./forecast.css\";\r\n\r\n// const WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n// const Forecast = ({ data }) => {\r\n//   const dayInAWeek = new Date().getDay();\r\n//   const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\r\n  \r\n//   return (\r\n//     <>\r\n//       <label className=\"title\">Daily</label>\r\n//       <Accordion allowZeroExpanded>\r\n//         {data.list.splice(0, 7).map((item, idx) => (\r\n//           <AccordionItem key={idx}>\r\n//             <AccordionItemHeading>\r\n//               <AccordionItemButton>\r\n//                 <div className=\"daily-item\">\r\n//                   <img src={`icons/${item.weather[0].icon}.png`} className=\"icon-small\" alt=\"weather\" />\r\n//                   <label className=\"day\">{forecastDays[idx]}</label>\r\n//                   <label className=\"description\">{item.weather[0].description}</label>\r\n//                   <label className=\"min-max\">{Math.round(item.main.temp_max)}°C /{Math.round(item.main.temp_min)}°C</label>\r\n//                 </div>\r\n//               </AccordionItemButton>\r\n//             </AccordionItemHeading>\r\n//             <AccordionItemPanel>\r\n//               <div className=\"daily-details-grid\">\r\n//                 <div className=\"daily-details-grid-item\">\r\n//                   <label>Pressure:</label>\r\n//                   <label>{item.main.pressure}</label>\r\n//                 </div>\r\n//                 <div className=\"daily-details-grid-item\">\r\n//                   <label>Humidity:</label>\r\n//                   <label>{item.main.humidity}</label>\r\n//                 </div>\r\n//                 <div className=\"daily-details-grid-item\">\r\n//                   <label>Clouds:</label>\r\n//                   <label>{item.clouds.all}%</label>\r\n//                 </div>\r\n//                 <div className=\"daily-details-grid-item\">\r\n//                   <label>Wind speed:</label>\r\n//                   <label>{item.wind.speed} m/s</label>\r\n//                 </div>\r\n//                 <div className=\"daily-details-grid-item\">\r\n//                   <label>Sea level:</label>\r\n//                   <label>{item.main.sea_level}m</label>\r\n//                 </div>\r\n//                 <div className=\"daily-details-grid-item\">\r\n//                   <label>Feels like:</label>\r\n//                   <label>{item.main.feels_like}°C</label>\r\n//                 </div>\r\n//               </div>\r\n//             </AccordionItemPanel>\r\n//           </AccordionItem>\r\n//         ))}\r\n//       </Accordion>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Forecast;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}